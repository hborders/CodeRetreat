import java.util.HashSet;
import java.util.Set;

public class Cell {
	public final int x;
	public final int y;
	public boolean alive;

	public Cell(int x, int y, boolean alive) {
		super();
		this.x = x;
		this.y = y;
		this.alive = alive;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + x;
		result = prime * result + y;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Cell other = (Cell) obj;
		if (x != other.x)
			return false;
		if (y != other.y)
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Cell [x=" + x + ", y=" + y + "]";
	}

	public Set<Cell> getNeighborCells() {
		Set<Cell> neighborCells = new HashSet<Cell>();
		for (int i = -1; i < 2; i++) {
			for (int j = -1; j < 2; j++) {
				neighborCells.add(new Cell(x + i, y + j));
			}
		}

		neighborCells.remove(this);

		return neighborCells;
	}
}
